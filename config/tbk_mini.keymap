/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>


&mmv {
    acceleration-exponent = <1>;      // 1
    time-to-max-speed-ms = <300>;     // 300
    delay-ms = <0>;                   // 0
    trigger-period-ms = <8>;          // 16
};

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <40>;      // 300
    delay-ms = <0>;                   // 0
    trigger-period-ms = <8>;          // 16
};


/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            quick-tap-ms = <180>;
            global-quick-tap;
        };

        ltq: ltq {
            compatible = "zmk,behavior-hold-tap";
            label = "LTQ";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <600>;
            global-quick-tap;
            quick-tap-ms = <400>;
        };
        
    };



    combos {
        compatible = "zmk,combos";

        left_bkt {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <4 3>;
            timeout-ms = <50>;
        };

        right_bkt {
            bindings = <&kp RBKT>;
            key-positions = <7 8>;
            timeout-ms = <50>;
        };

        left_par {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <15 16>;
            timeout-ms = <50>;
        };

        right_par {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <19 20>;
            timeout-ms = <50>;
        };

        left_brace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <27 28>;
            timeout-ms = <50>;
        };

        right_brace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <32 31>;
            timeout-ms = <50>;
        };

        bac {
            bindings = <&kp BACKSLASH>;
            key-positions = <5 6>;
        };

        pipe {
            bindings = <&kp PIPE>;
            key-positions = <17 18>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&ltq 1 TAB          &kp Q  &kp W  &kp E         &kp R         &kp T      &kp Y  &kp U         &kp I          &kp O    &kp P          &kp BACKSLASH
&mmv MOVE_DOWN    &kp A  &kp S  &kp D         &kp F         &kp G      &kp H  &kp J         &kp K          &kp L    &kp SEMICOLON  &kp SQT
&mt LSHFT CAPSLOCK  &kp Z  &kp X  &kp C         &kp V         &kp B      &kp N  &kp M         &kp COMMA      &kp DOT  &kp FSLH       &to 3
                                  &kp LEFT_ALT  &kp LEFT_WIN  &kp SPACE  &mo 2  &ltq 1 ENTER  &kp BACKSPACE
            >;
        };

        symbol_layer {
            bindings = <
&kp LS(GRAVE)  &kp LS(N1)  &kp LS(N2)  &kp LS(N3)  &kp LS(N4)  &kp LS(N5)  &kp LS(N6)     &kp LS(N7)     &kp LS(N8)  &kp LS(N9)            &kp LS(N0)             &kp GRAVE
&trans         &kp N1      &kp N2      &kp N3      &kp N4      &kp N5      &kp DOT        &kp MINUS      &kp EQUAL   &kp LS(LEFT_BRACKET)  &kp LS(RIGHT_BRACKET)  &kp BACKSPACE
&trans         &kp N6      &kp N7      &kp N8      &kp N9      &kp N0      &kp LS(MINUS)  &kp LS(EQUAL)  &kp SLASH   &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &none
                                       &trans      &trans      &trans      &trans         &trans         &trans
            >;
        };

        mouse_layer {
            bindings = <
&trans  &mkp LCLK  &kp UP    &mkp RCLK   &trans  &bt BT_CLR_ALL  &msc SCRL_UP    &mkp LCLK        &mmv MOVE_UP    &mkp RCLK         &msc SCRL_LEFT   &kp C_PLAY_PAUSE
&trans  &kp LEFT  &kp DOWN  &kp RIGHT  &trans  &bt BT_SEL 0    &msc SCRL_DOWN  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &msc SCRL_RIGHT  &kp C_VOL_DN
&trans  &trans    &trans    &trans     &trans  &bt BT_SEL 1    &trans            &trans          &trans          &trans           &trans             &kp C_VOL_UP
                            &trans     &trans  &trans          &trans            &trans          &trans
            >;
        };

        game_layer {
            bindings = <
&kp TAB         &trans  &trans  &trans  &trans  &trans  &trans  &trans     &trans  &trans    &trans    &kp ESC
&kp LCTRL       &trans  &trans  &trans  &trans  &trans  &trans  &trans     &trans  &trans    &kp UP    &trans
&kp LEFT_SHIFT  &trans  &trans  &trans  &trans  &trans  &trans  &trans     &trans  &kp LEFT  &kp DOWN  &kp RIGHT
                                &trans  &trans  &trans  &to 0   &kp ENTER  &trans
            >;
        };
    };
};
